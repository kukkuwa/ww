
******** Array student database *******
import java.util.Arrays;

public class StudentDatabase {
    private int[] students;
    private int currentStudents;
    private int maxStudents;

    public StudentDatabase(int maxStudents) {
        this.maxStudents = maxStudents;
        this.students = new int[maxStudents];
        this.currentStudents = 0;
    }

    public void insert(int studentNumber, int position) {
        if (position >= 0 && position < maxStudents && currentStudents < maxStudents) {
            students[position] = studentNumber;
            currentStudents++;
            System.out.println("Student with number " + studentNumber + " inserted at position " + position);
        } else {
            System.out.println("Cannot insert student. Position is out of range or database is full.");
        }
    }

    public void search(int studentNumber) {
        int position = -1;
        for (int i = 0; i < maxStudents; i++) {
            if (students[i] == studentNumber) {
                position = i;
                break;
            }
        }
        if (position != -1) {
            System.out.println("Student with number " + studentNumber + " found at position " + position);
        } else {
            System.out.println("Student with number " + studentNumber + " not found in the database.");
        }
    }

    public void delete(int studentNumber) {
        int position = -1;
        for (int i = 0; i < maxStudents; i++) {
            if (students[i] == studentNumber) {
                position = i;
                break;
            }
        }
        if (position != -1) {
            students[position] = 0;
            currentStudents--;
            System.out.println("Student with number " + studentNumber + " deleted from the database.");
        } else {
            System.out.println("Student with number " + studentNumber + " not found in the database.");
        }
    }

    public void display() {
        System.out.println("Current students in the database:");
        for (int i = 0; i < maxStudents; i++) {
            if (students[i] != 0) {
                System.out.println("Position " + i + ": Student Number " + students[i]);
            }
        }
    }

    public static void main(String[] args) {
        StudentDatabase database = new StudentDatabase(20);
        // Insert
        database.insert(25, 18);
        // Search
        database.search(15);
        // Delete
        database.delete(25);
        // Display
        database.display();
    }
}



***************** sTACK ALL METHODS IN FUNCTION************
public class Stack{
    int [] stack = new int[5];
    int top=-1;
    public void push(int data){
        if(isFull()){
            System.out.println("Stack is full....");
        }
        else{
            stack[++top] = data;
        }
    }
    public boolean isFull(){
        return top == 4;          
                                 
    }
    public boolean isEmpty()
    {
       return top == -1;
    }

    public void pop()
    {
        if(top == -1)
        {
            System.out.println("Stack is empty");
        }
        else
        {
           stack[top] =0;
           top--; 
        }
    }
    public void peek()
    {
           if(isEmpty())
           {
            System.out.println("The Stack is empty");
           }
           else{
            System.out.print(" This peek method shows the element that was entered last ");
            System.out.println(stack[top]);
           }
    } public void display()
    {
        for(int i=0;i<stack.length;i++)
        {
           System.out.print(" " + stack[i]);
        }
        System.out.print("    ");
    }

    public static void main(String [] args)
    {
         Stack st = new Stack();
         st.display();

         st.push(10);
         st.push(16);
         st.push(17);
         st.push(18);
         st.push(19);
         
         st.display();    
         st.pop();
         st.display(); 
         st.push(47);
         st.display(); 
         st.peek();
    }
}


*********** user input stack **********************
import java.util.Scanner;
public class user_Stack {
int[]stack;
int top;
    user_Stack(int size)
    { 
        stack=new int[size];
        top=-1;
    }
    public void push(int data){
        if(isFull()){
            System.out.println("Stack is full....");
        }
        else{
            stack[++top] = data;
            //System.out.println(data + " added to the stack");
        }}
    public boolean isFull(){
        return top == 4;         
                               
    }
    public boolean isEmpty()
    {
       return top == -1;
    }public void pop()
    {
        if(top == -1)
        {
            System.out.println("Stack is empty");
        }
        else
        {
           stack[top] =0;
           top--;      //--top is the same as --top
        }
    }
    public void peek()
    {
           if(isEmpty())
           {
            System.out.println("The Stack is empty");
           }
           else{
            System.out.print(" This peek method shows the element that was entered last ");
            System.out.println(stack[top]);
           }
    }
    public void display()
    {
        for(int i=0;i<stack.length;i++)
        {
           System.out.print(" " + stack[i]);
        }
        System.out.print("    ");
    }
    public static void main(String [] args)
    {
        Scanner sc = new Scanner(System.in);
         System.out.println("Enter the size of the stack");
         int size =sc.nextInt();
         user_Stack st =new user_Stack(size);
         System.out.println("1. push");
         System.out.println("2. pop");
         System.out.println("3. peek");
         System.out.println("4. display");
          int op =sc.nextInt();
         int i=0;
          if(op == 1)
         {
           System.out.println("Enter the number that you want in the stack");
           int a =sc.nextInt();
           st.push(a);
         } 
         else if(op == 2)
         {
           System.out.println("Enter the number that you want to delete from the stack");
           int b =sc.nextInt();

           st.pop();
        } 
         else if(op == 3)
         {
           System.out.println("See the element that was inserted into the stack last");
           int c =sc.nextInt();

           st.peek();

        }else if(op == 4)
         {
           System.out.println("display the numbers.......");
           int b =sc.nextInt();

           st.display();
         } 
    
    }
}


************** Leap year or not***********

import java.util.Scanner;

class leapyear {

    public static void main (String [] args)
    {
        Scanner b = new Scanner(System.in);

        System.out.println("Enter the year");
        int year = b.nextInt();
		
		if(year%4 == 0)
		{
			System.out.println("This is a leap year");
		}
		else{
			System.out.println("This is not a leap year");
		}

    }}

**********month year**
import java.util.Scanner;

class monthno{

    public static void main (String [] args)
    {
        Scanner b = new Scanner(System.in);
        
	System.out.println("Enter the year");
        int year = b.nextInt();

        System.out.println("Enter the number of month");
        int month = b.nextInt();
		
		switch (month)
		{
		 case 1:
         case 3:
         case 5:
		 case 7:
		 case 8:
		 case 10:
		 case 12:
		 
             System.out.println(year+ " 31 days");
     		 break;

		 case 2:
		 if(year%4 == 0)
		{
			System.out.println(year+ " 28 days");
		}
		else
		{
			System.out.println(year+ " 29 days");
		}			
     		 break;
			 
		 case 4:
         case 6:
         case 9:
         case 11:
              System.out.println(year+ " 30 days");
     		 break;	
				
		}
    }}

********* multiple numbers***********

import java.util.Scanner;
class multable{
public static void main(String []args)
{	
Scanner b =new Scanner(System.in);
System.out.println("enter number to cal");
int n = b.nextInt();
for(int i=1;i<=12;i++)
{
    System.out.println(n+" * "+i+" ="+ (n*i));
}
}
}
